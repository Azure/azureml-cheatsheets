(self.webpackChunkaml_cheatsheet=self.webpackChunkaml_cheatsheet||[]).push([[271],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(h,i(i({ref:n},u),{},{components:t})):r.createElement(h,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6962:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var r=t(4034),a=t(9973),o=(t(7294),t(3905)),i={title:"Azure ML Containers",description:"Guide to containers in Azure ML.",keywords:["containers","dockerfile","docker","environment"]},c={unversionedId:"cheatsheets/python/v1/docker-build",id:"cheatsheets/python/v1/docker-build",isDocsHomePage:!1,title:"Azure ML Containers",description:"Guide to containers in Azure ML.",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/cheatsheets/python/v1/docker-build.md",sourceDirName:"cheatsheets/python/v1",slug:"/cheatsheets/python/v1/docker-build",permalink:"/azureml-cheatsheets/ja/docs/cheatsheets/python/v1/docker-build",editUrl:"https://github.com/Azure/azureml-cheatsheets/tree/main/website/docs/cheatsheets/python/v1/docker-build.md",version:"current",frontMatter:{title:"Azure ML Containers",description:"Guide to containers in Azure ML.",keywords:["containers","dockerfile","docker","environment"]},sidebar:"pythonSidebar",previous:{title:"Distributed GPU Training",permalink:"/azureml-cheatsheets/ja/docs/cheatsheets/python/v1/distributed-training"},next:{title:"Debugging",permalink:"/azureml-cheatsheets/ja/docs/cheatsheets/python/v1/debugging"}},l=[{value:"Dockerfile",id:"dockerfile",children:[]}],s={toc:l};function u(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u3053\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u304a\u4f7f\u3044\u306e\u8a00\u8a9e\u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002"))),(0,o.kt)("p",null,"In this post we explain how Azure ML builds the containers used to run your code."),(0,o.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,o.kt)("p",null,"Each job in Azure ML runs with an associated ",(0,o.kt)("inlineCode",{parentName:"p"},"Environment"),". In practice, each environment\ncorresponds to a Docker image."),(0,o.kt)("p",null,"There are numerous ways to define an environment - from specifying a set of required Python packages\nthrough to directly providing a custom Docker image. In each case the contents of the associated\ndockerfile are available directly from the environment object."),(0,o.kt)("p",null,"For more background: ",(0,o.kt)("a",{parentName:"p",href:"environment"},"Environment")),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("p",null,"Suppose you create an environment - in this example we will work with Conda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="env.yml"',title:'"env.yml"'},"name: pytorch\nchannels:\n    - defaults\n    - pytorch\ndependencies:\n    - python=3.7\n    - pytorch\n    - torchvision\n")),(0,o.kt)("p",null,"We can create and register this as an ",(0,o.kt)("inlineCode",{parentName:"p"},"Environment")," in our workspace ",(0,o.kt)("inlineCode",{parentName:"p"},"ws")," as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from azureml.core import Environment\nenv = Environment.from_conda_specification('pytorch', 'env.yml')\nenv.register(ws)\n")),(0,o.kt)("p",null,"In order to consume this environment in a remote run, Azure ML builds a docker image\nthat creates the corresponding python environment."),(0,o.kt)("p",null,"The dockerfile used to build this image is available directly from the environment object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"details = env.get_image_details(ws)\nprint(details['ingredients']['dockerfile'])\n")),(0,o.kt)("p",null,"Let's take a look:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="Dockerfile" {1,7-12}',title:'"Dockerfile"',"{1,7-12}":!0},'FROM mcr.microsoft.com/azureml/intelmpi2018.3-ubuntu16.04:20200821.v1@sha256:8cee6f674276dddb23068d2710da7f7f95b119412cc482675ac79ba45a4acf99\nUSER root\nRUN mkdir -p $HOME/.cache\nWORKDIR /\nCOPY azureml-environment-setup/99brokenproxy /etc/apt/apt.conf.d/\nRUN if dpkg --compare-versions `conda --version | grep -oE \'[^ ]+$\'` lt 4.4.11; then conda install conda==4.4.11; fi\nCOPY azureml-environment-setup/mutated_conda_dependencies.yml azureml-environment-setup/mutated_conda_dependencies.yml\nRUN ldconfig /usr/local/cuda/lib64/stubs && conda env create -p /azureml-envs/azureml_7459a71437df47401c6a369f49fbbdb6 -\nf azureml-environment-setup/mutated_conda_dependencies.yml && rm -rf "$HOME/.cache/pip" && conda clean -aqy && CONDA_ROO\nT_DIR=$(conda info --root) && rm -rf "$CONDA_ROOT_DIR/pkgs" && find "$CONDA_ROOT_DIR" -type d -name __pycache__ -exec rm\n -rf {} + && ldconfig\n# AzureML Conda environment name: azureml_7459a71437df47401c6a369f49fbbdb6\nENV PATH /azureml-envs/azureml_7459a71437df47401c6a369f49fbbdb6/bin:$PATH\nENV AZUREML_CONDA_ENVIRONMENT_PATH /azureml-envs/azureml_7459a71437df47401c6a369f49fbbdb6\nENV LD_LIBRARY_PATH /azureml-envs/azureml_7459a71437df47401c6a369f49fbbdb6/lib:$LD_LIBRARY_PATH\nCOPY azureml-environment-setup/spark_cache.py azureml-environment-setup/log4j.properties /azureml-environment-setup/\nRUN if [ $SPARK_HOME ]; then /bin/bash -c \'$SPARK_HOME/bin/spark-submit  /azureml-environment-setup/spark_cache.py\'; fi\nENV AZUREML_ENVIRONMENT_IMAGE True\nCMD ["bash"]\n')),(0,o.kt)("p",null,"Notice:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The base image here is a standard image maintained by Azure ML. Dockerfiles for all base images are available on\ngithub: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Azure/AzureML-Containers"},"https://github.com/Azure/AzureML-Containers")),(0,o.kt)("li",{parentName:"ul"},"The dockerfile references ",(0,o.kt)("inlineCode",{parentName:"li"},"mutated_conda_dependencies.yml")," to build the Python environment via Conda.")),(0,o.kt)("p",null,"Get the contents of ",(0,o.kt)("inlineCode",{parentName:"p"},"mutated_conda_dependencies.yml")," from the environment:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"print(env.python.conda_dependencies.serialize_to_string())\n")),(0,o.kt)("p",null,"Which looks like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="mutated_conda_dependencies.yml"',title:'"mutated_conda_dependencies.yml"'},"channels:\n    - defaults\n    - pytorch\ndependencies:\n    - python=3.7\n    - pytorch\n    - torchvision\nname: azureml_7459a71437df47401c6a369f49fbbdb6\n")))}u.isMDXComponent=!0}}]);