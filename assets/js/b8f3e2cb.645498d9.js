(self.webpackChunkaml_cheatsheet=self.webpackChunkaml_cheatsheet||[]).push([[799],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return d},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return a?r.createElement(h,s(s({ref:t},d),{},{components:a})):r.createElement(h,s({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7164:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return l},default:function(){return d}});var r=a(4034),n=a(9973),o=(a(7294),a(3905)),s={title:"Data",description:"Guide to working with data in Azure ML.",keywords:["data","dataset","datastore"]},i={unversionedId:"cheatsheets/python/v1/data",id:"cheatsheets/python/v1/data",isDocsHomePage:!1,title:"Data",description:"Guide to working with data in Azure ML.",source:"@site/docs/cheatsheets/python/v1/data.md",sourceDirName:"cheatsheets/python/v1",slug:"/cheatsheets/python/v1/data",permalink:"/azureml-cheatsheets/docs/cheatsheets/python/v1/data",editUrl:"https://github.com/Azure/azureml-cheatsheets/tree/main/website/docs/cheatsheets/python/v1/data.md",version:"current",frontMatter:{title:"Data",description:"Guide to working with data in Azure ML.",keywords:["data","dataset","datastore"]},sidebar:"pythonSidebar",previous:{title:"Environment",permalink:"/azureml-cheatsheets/docs/cheatsheets/python/v1/environment"},next:{title:"Running Code in the Cloud",permalink:"/azureml-cheatsheets/docs/cheatsheets/python/v1/script-run-config"}},l=[{value:"Concepts",id:"concepts",children:[{value:"Datastore",id:"datastore",children:[]},{value:"Dataset",id:"dataset",children:[]}]},{value:"Get Datastore",id:"get-datastore",children:[{value:"Default datastore",id:"default-datastore",children:[]},{value:"Register datastore",id:"register-datastore",children:[]},{value:"Connect to datastore",id:"connect-to-datastore",children:[]},{value:"Link datastore to Azure Storage Explorer",id:"link-datastore-to-azure-storage-explorer",children:[]}]},{value:"Blob Datastore",id:"blob-datastore",children:[{value:"Upload to Blob Datastore",id:"upload-to-blob-datastore",children:[]},{value:"Download from Blob Datastore",id:"download-from-blob-datastore",children:[]},{value:"Via Storage Explorer",id:"via-storage-explorer",children:[]}]},{value:"Read from Datastore",id:"read-from-datastore",children:[{value:"DataReference",id:"datareference",children:[]}]},{value:"Create Dataset",id:"create-dataset",children:[{value:"From local data",id:"from-local-data",children:[]},{value:"From a datastore",id:"from-a-datastore",children:[]},{value:"From outputs using <code>OutputFileDatasetConfig</code>",id:"from-outputs-using-outputfiledatasetconfig",children:[]}]},{value:"Use Dataset",id:"use-dataset",children:[{value:"ScriptRunConfig",id:"scriptrunconfig",children:[]}]}],p={toc:l};function d(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"concepts"},"Concepts"),(0,o.kt)("p",null,"AzureML provides two basic assets for working with data:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Datastore"),(0,o.kt)("li",{parentName:"ul"},"Dataset")),(0,o.kt)("h3",{id:"datastore"},"Datastore"),(0,o.kt)("p",null,"Provides an interface for numerous Azure Machine Learning storage accounts."),(0,o.kt)("p",null,"Each Azure ML workspace comes with a default datastore:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from azureml.core import Workspace\nws = Workspace.from_config()\ndatastore = ws.get_default_datastore()\n")),(0,o.kt)("p",null,"which can also be accessed directly from the ",(0,o.kt)("a",{parentName:"p",href:"https://portal.azure.com"},"Azure Portal")," (under the same\nresource group as your Azure ML Workspace)."),(0,o.kt)("p",null,"Datastores are attached to workspaces and are used to store connection information to Azure storage services so you can refer to them by name and don't need to remember the connection information and secret used to connect to the storage services."),(0,o.kt)("p",null,"Use this class to perform management operations, including register, list, get, and remove datastores."),(0,o.kt)("h3",{id:"dataset"},"Dataset"),(0,o.kt)("p",null,"A dataset is a reference to data - either in a datastore or behind a public URL."),(0,o.kt)("p",null,"Datasets provide enhaced capabilities including data lineage (with the notion of versioned datasets)."),(0,o.kt)("h2",{id:"get-datastore"},"Get Datastore"),(0,o.kt)("h3",{id:"default-datastore"},"Default datastore"),(0,o.kt)("p",null,"Each workspace comes with a default datastore."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore = ws.get_default_datastore()\n")),(0,o.kt)("h3",{id:"register-datastore"},"Register datastore"),(0,o.kt)("p",null,"Connect to, or create, a datastore backed by one of the multiple data-storage options\nthat Azure provides. For example:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Azure Blob Container"),(0,o.kt)("li",{parentName:"ul"},"Azure Data Lake (Gen1 or Gen2)"),(0,o.kt)("li",{parentName:"ul"},"Azure File Share"),(0,o.kt)("li",{parentName:"ul"},"Azure MySQL"),(0,o.kt)("li",{parentName:"ul"},"Azure PostgreSQL"),(0,o.kt)("li",{parentName:"ul"},"Azure SQL"),(0,o.kt)("li",{parentName:"ul"},"Azure Databricks File System")),(0,o.kt)("p",null,"See the SDK for a comprehensive list of datastore types and authentication options:\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/python/api/azureml-core/azureml.core.datastore(class)?view=azure-ml-py"},"Datastores (SDK)"),"."),(0,o.kt)("h4",{id:"register-a-new-datastore"},"Register a new datastore"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To register a store via an ",(0,o.kt)("strong",{parentName:"p"},"account key"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastores = Datastore.register_azure_blob_container(\n    workspace=ws,\n    datastore_name='<datastore-name>',\n    container_name='<container-name>',\n    account_name='<account-name>',\n    account_key='<account-key>',\n)\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To register a store via a ",(0,o.kt)("strong",{parentName:"p"},"SAS token"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastores = Datastore.register_azure_blob_container(\n    workspace=ws,\n    datastore_name='<datastore-name>',\n    container_name='<container-name>',\n    account_name='<account-name>',\n    sas_token='<sas-token>',\n)\n")))),(0,o.kt)("h3",{id:"connect-to-datastore"},"Connect to datastore"),(0,o.kt)("p",null,"The workspace object ",(0,o.kt)("inlineCode",{parentName:"p"},"ws")," has  access to its datastores via"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"ws.datastores: Dict[str, Datastore]\n")),(0,o.kt)("p",null,"Any datastore that is registered to workspace can thus be accessed by name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore = ws.datastores['<name-of-registered-datastore>']\n")),(0,o.kt)("h3",{id:"link-datastore-to-azure-storage-explorer"},"Link datastore to Azure Storage Explorer"),(0,o.kt)("p",null,"The workspace object ",(0,o.kt)("inlineCode",{parentName:"p"},"ws")," is a very powerful handle when it comes to managing assets the\nworkspace has access to. For example, we can use the workspace to connect to a datastore\nin Azure Storage Explorer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from azureml.core import Workspace\nws = Workspace.from_config()\ndatastore = ws.datastores['<name-of-datastore>']\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For a datastore that was created using an ",(0,o.kt)("strong",{parentName:"p"},"account key")," we can use:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"account_name, account_key = datastore.account_name, datastore.account_key\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For a datastore that was created using a ",(0,o.kt)("strong",{parentName:"p"},"SAS token")," we can use:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"sas_token = datastore.sas_token\n")))),(0,o.kt)("p",null,"The account_name and account_key can then be used directly in Azure Storage Explorer to\nconnect to the Datastore."),(0,o.kt)("h2",{id:"blob-datastore"},"Blob Datastore"),(0,o.kt)("p",null,"Move data to and from your ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/python/api/azureml-core/azureml.data.azure_storage_datastore.azureblobdatastore?view=azure-ml-py"},"AzureBlobDatastore")," object ",(0,o.kt)("inlineCode",{parentName:"p"},"datastore"),"."),(0,o.kt)("h3",{id:"upload-to-blob-datastore"},"Upload to Blob Datastore"),(0,o.kt)("p",null,"The AzureBlobDatastore provides APIs for data upload:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore.upload(\n    src_dir='./data',\n    target_path='<path/on/datastore>',\n    overwrite=True,\n    )\n")),(0,o.kt)("p",null,"Alternatively, if you are working with multiple files in different locations you can use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore.upload_files(\n    files, # List[str] of absolute paths of files to upload\n    target_path='<path/on/datastore>',\n    overwrite=False,\n    )\n")),(0,o.kt)("h3",{id:"download-from-blob-datastore"},"Download from Blob Datastore"),(0,o.kt)("p",null,"Download the data from the blob container to the local file system."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore.download(\n    target_path, # str: local directory to download to\n    prefix='<path/on/datastore>',\n    overwrite=False,\n    )\n")),(0,o.kt)("h3",{id:"via-storage-explorer"},"Via Storage Explorer"),(0,o.kt)("p",null,"Azure Storage Explorer is free tool to easily manage your Azure cloud storage\nresources from Windows, macOS, or Linux. Download it from ",(0,o.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/features/storage-explorer/"},"here"),"."),(0,o.kt)("p",null,"Azure Storage Explorer gives you a (graphical) file exporer, so you can literally drag-and-drop\nfiles into and out of your datastores."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"#link-datastore-to-azure-storage-explorer"},'"Link datastore to Azure Storage Explorer"'),"\nabove for more details."),(0,o.kt)("h2",{id:"read-from-datastore"},"Read from Datastore"),(0,o.kt)("p",null,"Reference data in a ",(0,o.kt)("inlineCode",{parentName:"p"},"Datastore")," in your code, for example to use in a remote setting."),(0,o.kt)("h3",{id:"datareference"},"DataReference"),(0,o.kt)("p",null,"First, connect to your basic assets: ",(0,o.kt)("inlineCode",{parentName:"p"},"Workspace"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ComputeTarget")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Datastore"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from azureml.core import Workspace\nws: Workspace = Workspace.from_config()\ncompute_target: ComputeTarget = ws.compute_targets['<compute-target-name>']\nds: Datastore = ws.get_default_datastore()\n")),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"DataReference"),", either as mount:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"data_ref = ds.path('<path/on/datastore>').as_mount()\n")),(0,o.kt)("p",null,"or as download:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"data_ref = ds.path('<path/on/datastore>').as_download()\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To mount a datastore the workspace need to have read and write access to the underlying storage. For readonly datastore ",(0,o.kt)("inlineCode",{parentName:"p"},"as_download")," is the only option. "))),(0,o.kt)("h4",{id:"consume-datareference-in-scriptrunconfig"},"Consume DataReference in ScriptRunConfig"),(0,o.kt)("p",null,"Add this DataReference to a ScriptRunConfig as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"config = ScriptRunConfig(\n    source_directory='.',\n    script='script.py',\n    arguments=[str(data_ref)],               # returns environment variable $AZUREML_DATAREFERENCE_example_data\n    compute_target=compute_target,\n)\n\nconfig.run_config.data_references[data_ref.data_reference_name] = data_ref.to_config()\n")),(0,o.kt)("p",null,"The command-line argument ",(0,o.kt)("inlineCode",{parentName:"p"},"str(data_ref)")," returns the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"$AZUREML_DATAREFERENCE_example_data"),".\nFinally, ",(0,o.kt)("inlineCode",{parentName:"p"},"data_ref.to_config()")," instructs the run to mount the data to the compute target and to assign the\nabove environment variable appropriately."),(0,o.kt)("h4",{id:"without-specifying-argument"},"Without specifying argument"),(0,o.kt)("p",null,"Specify a ",(0,o.kt)("inlineCode",{parentName:"p"},"path_on_compute")," to reference your data without the need for command-line arguments."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"data_ref = ds.path('<path/on/datastore>').as_mount()\ndata_ref.path_on_compute = '/tmp/data'\n\nconfig = ScriptRunConfig(\n    source_directory='.',\n    script='script.py',\n    compute_target=compute_target,\n)\n\nconfig.run_config.data_references[data_ref.data_reference_name] = data_ref.to_config()\n")),(0,o.kt)("h2",{id:"create-dataset"},"Create Dataset"),(0,o.kt)("h3",{id:"from-local-data"},"From local data"),(0,o.kt)("p",null,"You could create and register a dataset directly from a folder on your local machine. Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"src_dir")," must point to a ",(0,o.kt)("strong",{parentName:"p"},"folder"),", not file."),(0,o.kt)("p",null,"\u26a0\ufe0f Method ",(0,o.kt)("inlineCode",{parentName:"p"},"upload_directory"),": This is an experimental method, and may change at any time. Please see ",(0,o.kt)("a",{parentName:"p",href:"https://aka.ms/azuremlexperimental"},"https://aka.ms/azuremlexperimental")," for more information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from azureml.core import Dataset\n\n# upload the data to datastore and create a FileDataset from it \nfolder_data = Dataset.File.upload_directory(src_dir="path/to/folder", target=(datastore, "self-defined/path/on/datastore"))\ndataset = folder_data.register(workspace=ws, name="<dataset_name>")\n')),(0,o.kt)("h3",{id:"from-a-datastore"},"From a datastore"),(0,o.kt)("p",null,"The code snippet below shows how to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Dataset")," given a relative path on ",(0,o.kt)("inlineCode",{parentName:"p"},"datastore"),". Note that the path could either point to a folder (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"local/test/"),") or a single file (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"local/test/data.tsv"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from azureml.core import Dataset\n\n# create input dataset\ndata = Dataset.File.from_files(path=(datastore, "path/on/datastore"))\ndataset = data.register(workspace=ws, name="<dataset_name>")\n')),(0,o.kt)("h3",{id:"from-outputs-using-outputfiledatasetconfig"},"From outputs using ",(0,o.kt)("inlineCode",{parentName:"h3"},"OutputFileDatasetConfig")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from azureml.core import ScriptRunConfig\nfrom azureml.data import OutputFileDatasetConfig\n\noutput_data = OutputFileDatasetConfig(\n    destination=(datastore, "path/on/datastore"),\n    name="<output_name>",\n)\n\nconfig = ScriptRunConfig(\n        source_directory=".",\n        script="run.py",\n        arguments=["--output_dir", output_data.as_mount()],\n)\n\n# register your OutputFileDatasetConfig as a dataset\noutput_data_dataset = output_data.register_on_complete(name="<dataset_name>", description = "<dataset_description>")\n')),(0,o.kt)("h4",{id:"upload-to-datastore"},"Upload to datastore"),(0,o.kt)("p",null,"To upload a local directory ",(0,o.kt)("inlineCode",{parentName:"p"},"./data/"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore = ws.get_default_datastore()\ndatastore.upload(src_dir='./data', target_path='<path/on/datastore>', overwrite=True)\n")),(0,o.kt)("p",null,"This will upload the entire directory ",(0,o.kt)("inlineCode",{parentName:"p"},"./data")," from local to the default datastore associated\nto your workspace ",(0,o.kt)("inlineCode",{parentName:"p"},"ws"),"."),(0,o.kt)("h4",{id:"create-dataset-from-files-in-datastore"},"Create dataset from files in datastore"),(0,o.kt)("p",null,"To create a dataset from a directory on a datastore at ",(0,o.kt)("inlineCode",{parentName:"p"},"<path/on/datastore>"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"datastore = ws.get_default_datastore()\ndataset = Dataset.File.from_files(path=(datastore, '<path/on/datastore>'))\n")),(0,o.kt)("h2",{id:"use-dataset"},"Use Dataset"),(0,o.kt)("h3",{id:"scriptrunconfig"},"ScriptRunConfig"),(0,o.kt)("p",null,"To reference data from a dataset in a ScriptRunConfig you can either mount or download the\ndataset using:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dataset.as_mount(path_on_compute)")," : mount dataset to a remote run"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dataset.as_download(path_on_compute)")," : download the dataset to a remote run")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Path on compute")," Both ",(0,o.kt)("inlineCode",{parentName:"p"},"as_mount")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"as_download")," accept an (optional) parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"path_on_compute"),".\nThis defines the path on the compute target where the data is made available."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"None"),", the data will be downloaded into a temporary directory."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"path_on_compute")," starts with a ",(0,o.kt)("inlineCode",{parentName:"li"},"/")," it will be treated as an ",(0,o.kt)("strong",{parentName:"li"},"absolute path"),". (If you have\nspecified an absolute path, please make sure that the job has permission to write to that directory.)"),(0,o.kt)("li",{parentName:"ul"},"Otherwise it will be treated as relative to the working directory")),(0,o.kt)("p",null,"Reference this data in a remote run, for example in mount-mode:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="run.py"',title:'"run.py"'},"arguments=[dataset.as_mount()]\nconfig = ScriptRunConfig(source_directory='.', script='train.py', arguments=arguments)\nexperiment.submit(config)\n")),(0,o.kt)("p",null,"and consumed in ",(0,o.kt)("inlineCode",{parentName:"p"},"train.py"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="train.py"',title:'"train.py"'},'import sys\ndata_dir = sys.argv[1]\n\nprint("===== DATA =====")\nprint("DATA PATH: " + data_dir)\nprint("LIST FILES IN DATA DIR...")\nprint(os.listdir(data_dir))\nprint("================")\n')),(0,o.kt)("p",null,"For more details: ",(0,o.kt)("a",{parentName:"p",href:"script-run-config"},"ScriptRunConfig")))}d.isMDXComponent=!0}}]);